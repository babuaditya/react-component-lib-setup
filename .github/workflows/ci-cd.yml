name: CI/CD Pipeline

on:
  # Trigger for pull requests and pushes to main
  pull_request:
    branches:
      - main  # Deploy on the dev server when PR is opened to main
  push:
    branches:
      - main  # Publish to npm and deploy to production when code is merged

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Set Node.js version to 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Library with Rollup
        run: npm run build  # Rollup build command to create `dist`

      - name: Build Storybook
        run: npm run build-storybook 

      - name: List Build Output
        run: ls -la ./storybook-static/  # Verify Storybook output

      - name: Upload Storybook Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybook-static
          path: ./storybook-static

  # Deploy to Vercel (Production server after merge to main)
  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Storybook Artifacts
        uses: actions/download-artifact@v3
        with:
          name: storybook-static 

      - name: List Downloaded Artifacts
        run: ls -la ./storybook-static/  # Verify downloaded artifacts

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          TEAM_TOKEN: ${{ secrets.TEAM_TOKEN }}  # Adjust this if necessary
        run: |
          vercel --prod --yes --token "$VERCEL_TOKEN" --team "$TEAM_TOKEN" ./storybook-static 

  # Publish to npm
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Set Node.js version to 20

      - name: Install dependencies
        run: npm install

      - name: Build Library
        run: npm run build

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
